name: build

on:
  push:
    branches-ignore:
      - 'appveyor**'
  pull_request:

jobs:
  ubuntu64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - name: apt-update
      run: sudo apt-get update
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends gcc g++ libsnappy-dev zlib1g-dev libpng-dev libbrotli-dev libdwarf-dev libprocps-dev libgtest-dev qtbase5-dev qtdeclarative5-dev python3 ninja-build cmake
    - name: cmake
      run: cmake -S$PWD -B$PWD/build -G Ninja -DENABLE_STATIC_SNAPPY=0 -DENABLE_GUI=1
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check
    - name: package
      run: cmake --build $PWD/build --use-stderr --target package

  ubuntu32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - run: sudo dpkg --add-architecture i386
    - run: sudo apt-get update
    - run: sudo apt-get install -qq -y --no-install-recommends gcc-multilib g++-multilib python3 ninja-build cmake libx11-dev:i386
    - run: cmake -S. -Bbuild -G Ninja -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 -DENABLE_GUI=0
    - run: cmake --build build --use-stderr
    - run: cmake --build build --use-stderr --target check
    - run: test -x build/glretrace -a -x build/wrappers/glxtrace.so

  ubuntu64-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - name: apt-update
      run: sudo apt-get update
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends clang libc++-dev libc++abi-dev zlib1g-dev libdwarf-dev libprocps-dev qtbase5-dev qtdeclarative5-dev python3 ninja-build cmake
    - name: cmake
      run: cmake -S$PWD -B$PWD/build -G Ninja -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DENABLE_GUI=1
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check

  ubuntu-18_04:
    runs-on: ubuntu-latest
    env:
      PACKAGE: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
    - name: build
      run: ci/build-ubuntu-18.04.sh
    - if: env.PACKAGE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: apitrace-ubuntu-18.04
        path: build/docker-ubuntu-18.04/apitrace-*.tar.bz2
        if-no-files-found: error

  mingw32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - run: sudo apt-get install -qq -y --no-install-recommends g++-mingw-w64-i686 ninja-build cmake
    - run: wget -q -O - https://github.com/apitrace/dxsdk/archive/master.tar.gz | tar -xz
    - run: ci/build-mingw.sh mingw32

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        target: ["win32", "win64"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - name: Cache Downloads
      id: cache-downloads
      uses: actions/cache@v2
      with:
        path: |
          *qtbase-*.7z
          *qttools-*.7z
        key: ${{ runner.os }}-${{ matrix.target }}-5.15.2-1
    - name: Build
      run: .\ci\build-msvc.ps1 -target ${{ matrix.target }}
    - name: Upload artifacts
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v2
      with:
        name: apitrace-${{ matrix.target }}
        path: build/apitrace-*.7z
        if-no-files-found: error

  mac64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - name: Cache Downloads
      id: cache-downloads
      uses: actions/cache@v2
      with:
        path: "qt/*qtbase-*.7z"
        key: ${{ runner.os }}-5.15.10-0
    - name: cmake
      run: ci/build-macos.sh
